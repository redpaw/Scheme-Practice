

 (define (simpson f a b n) 
   
   (define h (/ (- b a) n)) 
   (define (simpson-term k) 
      (define y (f (+ a (* k h))))
      (cond ((= k 0) y)
            ((= k n) y)
            ((even? k) (* 2 y)) 
            ((odd? k) (* 4 y))))
            
   (* (/ h 3) (sum simpson-term 0 inc n))) 
 
   
  (define (cube x) (* x x x)) 

 (define (inc n) (+ n 1)) 
  
 (define (sum term a next b) 
   (if (> a b) 
       0 
       (+ (term a) 
          (sum term (next a) next b)))) 
